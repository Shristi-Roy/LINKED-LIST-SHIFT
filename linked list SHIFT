class node {
    constructor(val){
        this.data = val
        this.next = null
    }
}
class SinglyLinkList{
    constructor(){
        this.head = null;
        this.tail = null;
        this.length = 0;
    }
    push(x) {
      let newNode = new Node(x);
        if(this.head == null){
            this.head=newNode
            this.tail=newNode
        } else {
            this.tail.next = newNode
            this.tail = newNode
        }
        this.length = this.length + 1
        return this.length
    }

    pop() {
        if(this.head ==null){
            return "No node available"
        }
        let a = this.head;
        let b = a
        while(b.next){
            a =b
            b = b.next
        }
        this.tail = a
        this.tail.next = null
        this.tail.next = null
        this.length = this.length - 1
        if(this.length == 0){
            this.tail = null
            this.head = null
        }

        return b
     }
    unshift(val){
        let newHead = new Node(val);
        if(this.head == null){
            this.head = newHead;
            this.tail = newHead;
        }else {
            newHead.next = this.head;
            this.head = newHead;
        }
        this.length = this.length+1
        return this.length
    }
    shift(){
        if(this.head==null){
            return "No node available"
        }
        let currentHead = this.head;
        thi.head = currentHead.next;
        currentHead.next = null;
        this.length =this.length - 1
        if(this.length == 0){
            this.tail = null
        }
        return currentHead
    }
}
const ar = new SinglyLinkList()
